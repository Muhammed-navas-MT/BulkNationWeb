<%- include("../partials/userr/header.ejs") %>
<style>
    .ship_detail, .order_review {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }
    .address-item, .order_table {
        transition: all 0.3s ease;
        background-color: #fff;
        border-radius: 8px;
    }
    .address-item:hover, .order_table:hover {
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    .badge-default {
        background-color: #007bff;
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
    }
    .btn-edit, .btn-ship {
        padding: 5px 15px;
        border-radius: 20px;
    }
    .btn-add-address {
        color: #17a2b8;
        border-color: #17a2b8;
        margin-top: 15px;
        display: inline-block;
    }
    .btn-add-address:hover {
        color: #fff;
        background-color: #17a2b8;
        border-color: #17a2b8;
    }
    .address-item.selected {
        border: 2px solid #007bff;
        box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
    }

    #couponsModal .modal-content {
        border: none;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    #couponsModal .modal-header {
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
        background-color: #3BB77E;
    }

    #couponsModal .modal-title {
        font-weight: 600;
        color: #ffffff;
    }

    #couponsModal .list-group-item {
        border: none;
        padding: 15px 0;
        border-bottom: 1px solid #f1f1f1;
    }

    #couponsModal .list-group-item:last-child {
        border-bottom: none;
    }

    #couponsModal .coupon-code {
        font-size: 1.1em;
        color: #3BB77E;
    }

    #couponsModal .badge {
        font-size: 0.9em;
        padding: 8px 12px;
        background-color: #3BB77E;
    }

    #couponsModal .btn-secondary {
        background-color: #f1f1f1;
        color: #333;
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    #couponsModal .btn-secondary:hover {
        background-color: #e0e0e0;
    }

    #couponsModal .text-muted {
        color: #6c757d;
    }
    @media (max-width: 768px) {
        .ship_detail, .order_review {
            padding: 15px;
        }
    }


.address-item .form-control {
    width: 80%; 
    height: 35px;
    font-size: 14px;
    padding: 6px 10px;
}

.address-item {
    max-width: 500px; 
    margin: 0 auto; 
}

.address-item .btn-ship {
    width: auto; 
    padding: 6px 12px; 
    font-size: 14px; 
}

                .address-selection {
                    position: relative;
                }
                
                #addressDropdown {
                    width: 100%;
                    margin-bottom: 15px;
                }
                
                .address-details-container {
                    max-height: 500px;
                    overflow-y: auto;
                }
                
                .address-details {
                    display: none;
                };

                .modal-dialog {
    max-width: 800px;
}

.error-message {
    color: red;
    font-size: 12px;
    display: none;
}

.form-label {
    font-weight: 500;
    margin-bottom: 0.5rem;
}

.modal-content {
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0,0,0,0.1);
}

.modal-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
}

.modal-title {
    color: #333;
    font-weight: 600;
}

.modal-footer {
    border-top: 1px solid #dee2e6;
    padding: 1rem;
}

.btn-primary {
    background-color: #3BB77E;
    border-color: #3BB77E;
}

.btn-primary:hover {
    background-color: #2d8f61;
    border-color: #2d8f61;
}
               
</style>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> Shop
                <span></span> Checkout
            </div>
        </div>
    </div>

    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    <div class="toggle_info">
                        <span><i class="fi-rs-label mr-10"></i><span class="text-muted">Have a coupon?</span> <a href="#coupon" data-bs-toggle="collapse" class="collapsed" aria-expanded="false">Click here to enter your code</a></span>
                    </div>
                    <div class="panel-collapse collapse coupon_form" id="coupon">
                        <div class="panel-body">
                            <p class="mb-30 font-sm">If you have a coupon code, please apply it below.</p>
                            <form id="couponForm">
                                <div class="form-group">
                                    <input type="text" id="couponValue" placeholder="Enter Coupon Code...">
                                </div>
                                <div class="form-group">
                                    <button id="addCoupon" class="btn btn-primary">Apply Coupon</button>
                                </div>
                                <div class="form-group">
                                    <button style="display: none;" id="remove"  class="btn btn-primary">Remove Coupon</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <button style="width: 200px; height: 65px;" type="button" id="showCouponsButton" class="btn btn-sm btn-ship">Show Coupons</button>
                </div>


            <!-- Modal -->
<!-- Coupons Modal -->
<div class="modal fade" id="couponsModal" tabindex="-1" aria-labelledby="couponsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="couponsModalLabel">Available Coupons</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <% if (coupons && coupons.length > 0) { %>
                    <ul class="list-group list-group-flush">
                        <% coupons.forEach(coupon => { %>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <strong class="coupon-code"><%= coupon.name %></strong>
                                    <!-- <p class="mb-0 text-muted"><%= coupon.description %></p> -->
                                </div>
                                <span class="badge bg-primary rounded-pill"><%= coupon.offerPrice %>% OFF</span>
                            </li>
                        <% }); %>
                    </ul>
                <% } else { %>
                    <p class="text-center text-muted">No coupons available at the moment. Check back later!</p>
                <% } %>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="divider mt-50 mb-50"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="ship_detail">
                        <h4 class="mb-4">Shipping Details</h4>
                        <% if (address && address.length > 0) { %>
                            <div class="address-selection">
                                <div class="form-group">
                                    <label for="addressDropdown"><strong>Select Shipping Address</strong></label>
                                    <select id="addressDropdown" class="form-control">
                                        <option value="">Choose an address</option>
                                        <% address.forEach((addr, index) => { %>
                                            <option value="<%= index %>">
                                                <%= addr.name %> - <%= addr.addressType %>, <%= addr.city %>, <%= addr.state %>
                                            </option>
                                        <% }); %>
                                    </select>
                                </div>
                
                                <div id="addressDetails" class="address-details-container" style="display: none;">
                                    <% address.forEach((addr, index) => { %>
                                        <div class="address-item mb-4 p-4 border rounded bg-white address-details" id="address-details-<%= index %>" style="display: none;">
                                            <div class="address-container">
                                                <div class="address-details">
                                                    <form>
                                                        <div class="mb-1">
                                                            <label for="name-<%= index %>"><strong>Name:</strong></label>
                                                            <input type="text" id="name-<%= index %>" class="form-control" value="<%= addr.name %>" readonly />
                                                        </div>
                                                        <div class="mb-1">
                                                            <label for="address-<%= index %>"><strong>Address:</strong></label>
                                                            <input type="text" id="address-<%= index %>" class="form-control" value="<%= addr.addressType %>, <%= addr.city %>, <%= addr.state %>" readonly />
                                                        </div>
                                                        <div class="mb-1">
                                                            <label for="landmark-<%= index %>"><strong>Landmark:</strong></label>
                                                            <input type="text" id="landmark-<%= index %>" class="form-control" value="<%= addr.landMark %>" readonly />
                                                        </div>
                                                        <div class="mb-1">
                                                            <label for="pincode-<%= index %>"><strong>Pincode:</strong></label>
                                                            <input type="text" id="pincode-<%= index %>" class="form-control" value="<%= addr.pincode %>" readonly />
                                                        </div>
                                                        <div class="mb-1">
                                                            <label for="phone-<%= index %>"><strong>Phone:</strong></label>
                                                            <input type="text" id="phone-<%= index %>" class="form-control" value="<%= addr.phone %>" readonly />
                                                        </div>
                                                        <div class="mb-1">
                                                            <label for="altPhone-<%= index %>"><strong>Alternate Phone:</strong></label>
                                                            <input type="text" id="altPhone-<%= index %>" class="form-control" value="<%= addr.altPhone %>" readonly />
                                                        </div>
                                                        <input type="hidden" id="id-<%= index %>" value="<%= addr._id %>" />
                                                    </form>
                                                </div>
                                            </div>
                                            <div class="mt-3">
                                                <button type="button" class="btn btn-sm btn-ship addressButton" data-index="<%= index %>">Ship to this address</button>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                                <a href="/addaddress" class="btn btn-sm btn-add-address mt-3">Add New Address</a>
                            </div>
                        <% } else { %>
                            <a href="/addaddress" class="btn btn-sm btn-add-address mt-3">Add New Address</a>
                        <% } %>
                    </div>
                </div>
                
                
                <div class="col-md-6">
                    <div class="order_review">
                        <div class="mb-20">
                            <h4>Your Orders</h4>
                        </div>
                        <div class="table-responsive order_table text-center">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th colspan="2">Product</th>
                                        <th>Price</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (product && product.length > 0) { %>
                                        <% product.forEach((item, index) => { %>
                                            <tr>
                                                <td class="image product-thumbnail">
                                                    <img src="/uploads/re-image/<%= item.productImage[0] %>" alt="#" />
                                                </td>
                                                <td>
                                                    <h5><a href="#"><%= item.productName %></a></h5>
                                                    <span class="product-qty">Quantity: <%= quantity ? quantity : item.quantity %></span>
                                                </td>
                                                <td class="salePrice" id="price">₹<%= item.salePrice %></td>
                                                <td class="productId" id="productId" style="display: none;"><%= item._id %></td>
                                            </tr>
                                        <% }); %>
                                        <tr>
                                            <td colspan="2" style="text-align: right; font-weight: bold;">Subtotal:</td>
                                            <td style="font-weight: bold;">₹<%= subtotal %></td>
                                        </tr>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="3" style="text-align: center;">Your cart is empty.</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>SubTotal</th>
                                        <td id="subtotal" class="product-subtotal" colspan="2">₹<%= subtotal %></td>
                                    </tr>
                                    <tr>
                                        <th>Shipping</th>
                                        <td id="shipping" colspan="2"><em>₹70</em></td>
                                    </tr>
                                    <tr>
                                        <th>Discount Price</th>
                                        <td id="discount"><span class="font-xl text-brand fw-900">₹0</span></td>
                                    </tr>
                                    </tr>
                                    <tr>
                                        <th>Total</th>
                                        <td colspan="2" id="totalPrice" class="product-subtotal"><span class="font-xl text-brand fw-900">₹<%= subtotal %></span></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                        <!-- <div class="payment_method">
                            <div class="mb-25">
                                <h5>Payment</h5>
                            </div>
                            <div id="cashOndelivery" class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" id="cashRadio" checked>
                                <label class="form-check-label" for="cashRadio">Cash On Delivery</label>
                            </div>
                            <div class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" id="onlineRadio">
                                <label class="form-check-label" for="onlineRadio">Online</label>
                            </div>
                            <div id="" class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" id="cashRadio" checked>
                                <label class="form-check-label" for="cashRadio">Wallet</label>
                            </div>
                        </div> -->
                        <div class="payment_method">
                            <div class="mb-25">
                                <h5>Payment</h5>
                                <h3 id="walletValue" style="display: none;"><%= wallet.balance%></h3>
                            </div>
                            <div id="cashOnDelivery" class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" id="cashRadio">
                                <label class="form-check-label" for="cashRadio">Cash On Delivery</label>
                            </div>
                            <div id="onlinePayment" class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" id="onlineRadio">
                                <label class="form-check-label" for="onlineRadio">Online</label>
                            </div>
                            <div id="walletPayment" class="custome-radio">
                                <input class="form-check-input" required type="radio" name="payment_option" id="walletRadio">
                                <label class="form-check-label" for="walletRadio">Wallet</label>
                            </div>
                        </div>
                        
                        <button type="button" id="placeOrder" class="btn btn-sm btn-ship">Place Order</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addressForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="fullName" class="form-label">Full Name</label>
                                        <input type="text" class="form-control" id="fullName" name="name" placeholder="Enter your full name" required>
                                        <small class="error-message" id="nameError"></small>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="phone" class="form-label">Phone Number</label>
                                        <input type="tel" class="form-control" id="phone" name="phone" placeholder="Enter your phone number" required>
                                        <small class="error-message" id="phoneError"></small>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="address" class="form-label">Address</label>
                                <textarea class="form-control" id="address" name="addressType" placeholder="Enter your address" rows="3" required></textarea>
                                <small class="error-message" id="addressError"></small>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="city" class="form-label">City</label>
                                        <input type="text" class="form-control" id="city" name="city" placeholder="Enter your city" required>
                                        <small class="error-message" id="cityError"></small>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="state" class="form-label">State</label>
                                        <input type="text" class="form-control" id="state" name="state" placeholder="Enter your state" required>
                                        <small class="error-message" id="stateError"></small>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="landmark" class="form-label">Landmark</label>
                                        <input type="text" class="form-control" id="landmark" name="landmark" placeholder="Enter a nearby landmark" required>
                                        <small class="error-message" id="landmarkError"></small>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="pincode" class="form-label">Pincode</label>
                                        <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Enter your pincode" required>
                                        <small class="error-message" id="pincodeError"></small>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="altPhone" class="form-label">Alternative Phone Number</label>
                                <input type="tel" class="form-control" id="altPhone" name="altPhone" placeholder="Enter your alternative phone number" required>
                                <small class="error-message" id="altPhoneError"></small>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save Address</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
// function updatePaymentOptions() {
//     const totalPrice = parseFloat(document.querySelector('#totalPrice').textContent.replace('₹', '').trim());

//     document.querySelectorAll('input[name="payment_option"]').forEach((radio) => {
//         if (totalPrice > 930) {
//             if (radio.id === "cashRadio") {
//                 radio.disabled = true;
//                 radio.checked = false; 
//             }
//             if (radio.id === "onlineRadio") {
//                 radio.disabled = false;
//                 radio.checked = true; // Automatically select Online Payment
//             }
//             paymentMethod = "Online"; // Ensure the payment method is set correctly
//         } else {
//             radio.disabled = false; // Enable all payment methods
//         }
//     });
// }


// document.addEventListener('DOMContentLoaded', updatePaymentOptions);


// // -----


// // select payment method option

// let paymentMethod = "Cash On Delivery"; 

// document.querySelectorAll('input[name="payment_option"]').forEach((radio) => {
//     radio.addEventListener('change', function () {
//         paymentMethod = this.id === "onlineRadio" ? "Online" : "Cash On Delivery";
//     });
// });

// -----


const walletValue = parseFloat(document.getElementById("walletValue").textContent.trim());

function updatePaymentOptions() {
    const totalPrice = parseFloat(document.querySelector('#totalPrice').textContent.replace('₹', '').trim());
    const radios = document.querySelectorAll('input[name="payment_option"]');
    let updatedPaymentMethod = false;

    radios.forEach((radio) => {
        if (radio.id === "walletRadio") {
            if (walletValue === 0 || walletValue < totalPrice) {
                radio.disabled = true;
                radio.checked = false;
            } else {
                radio.disabled = false;
            }
        } else if (totalPrice > 930) {
            if (radio.id === "cashRadio") {
                radio.disabled = true;
                radio.checked = false;
            } else {
                radio.disabled = false;
                if (!updatedPaymentMethod) {
                    radio.checked = true; // Automatically select an enabled option
                    paymentMethod = radio.id === "onlineRadio" ? "Online" : "Wallet";
                    updatedPaymentMethod = true;
                }
            }
        } else {
            radio.disabled = false; // Enable all payment methods
        }
    });
}

let paymentMethod = "Cash On Delivery"; // Default

document.addEventListener('DOMContentLoaded', () => {
    updatePaymentOptions();
    document.querySelectorAll('input[name="payment_option"]').forEach((radio) => {
        radio.addEventListener('change', function () {
            paymentMethod = this.id === "onlineRadio" ? "Online" : 
                            this.id === "walletRadio" ? "Wallet" : 
                            "Cash On Delivery";
        });
    });
});



// select shiping address function

    let selectedAddress = null;
    let selectedAddressIndex = null;

    document.addEventListener('DOMContentLoaded', function() {
    const addressDropdown = document.getElementById('addressDropdown');
    const addressDetailsContainer = document.getElementById('addressDetails');
    const addressDetailsElements = document.querySelectorAll('.address-details');
    const addressButtons = document.querySelectorAll('.addressButton');

    addressDropdown.addEventListener('change', function() {
        const selectedIndex = this.value;
        
        addressDetailsElements.forEach(el => el.style.display = 'none');
        addressDetailsContainer.style.display = 'none';

        if (selectedIndex !== "") {
            const selectedAddressDetails = document.getElementById(`address-details-${selectedIndex}`);
            
            if (selectedAddressDetails) {
                selectedAddressDetails.style.display = 'block';
                addressDetailsContainer.style.display = 'block';
            }
        }
    });

  
    addressButtons.forEach(button => {
        button.addEventListener('click', function() {
            const index = this.getAttribute('data-index');
            const addressItem = document.getElementById(`address-details-${index}`);
            
            addressDetailsElements.forEach(el => el.classList.remove('selected'));
            
            addressItem.classList.add('selected');

            selectedAddress = {
                name: addressItem.querySelector(`#name-${index}`).value,
                addressType: addressItem.querySelector(`#address-${index}`).value.split(',')[0].trim(),
                city: addressItem.querySelector(`#address-${index}`).value.split(',')[1].trim(),
                state: addressItem.querySelector(`#address-${index}`).value.split(',')[2].trim(),
                landmark: addressItem.querySelector(`#landmark-${index}`).value,
                pincode: addressItem.querySelector(`#pincode-${index}`).value,
                phone: addressItem.querySelector(`#phone-${index}`).value,
                altPhone: addressItem.querySelector(`#altPhone-${index}`).value,
                id: addressItem.querySelector(`#id-${index}`).value
            };

            Swal.fire({
                icon: 'success',
                title: 'Address Selected',
                text: 'You have selected an address for shipping.',
            });
        });
    });
});

// ------

    // place order function in go to backend
    document.querySelector('#placeOrder').addEventListener('click', async (e) => {
        e.preventDefault();

        if (!selectedAddress) {
            Swal.fire({
                icon: 'error',
                title: 'No Address Selected',
                text: 'Please select a shipping address before placing the order.',
            });
            return;
        }
        // Extract products
        const productElements = document.querySelectorAll('.order_table tbody tr');
            const products = Array.from(productElements).map(row => {
                const productNameElement = row.querySelector('td:nth-child(2) h5 a');
                const quantityElement = row.querySelector('.product-qty');
                const priceElement = row.querySelector('#price');
                const id = row.querySelector("#productId");

                if (productNameElement && priceElement) {
                    return {
                        name: productNameElement.textContent.trim(),
                        quantity: quantityElement ? parseInt(quantityElement.textContent.split(':')[1].trim()) : 1,
                        price: parseFloat(priceElement.textContent.replace('₹', '').trim()),
                        id:id.textContent,
                    };
                }
            }).filter(product => product);

        const subtotal = parseFloat(document.querySelector('#subtotal').textContent.replace('₹', '').trim());
        const totalPrice = parseFloat(document.querySelector('#totalPrice').textContent.replace('₹', '').trim());
        const couponCodeElement= document.getElementById("couponValue");
        const couponCode=couponCodeElement.value.trim();
        const discount = document.getElementById("discount").textContent.replace('₹', '').trim() || 0;
        const shiping  = document.getElementById("shipping").textContent.replace("₹", "").trim() || 0;
       
        const payload = {
            address: selectedAddress,
            products,
            subtotal,
            total: totalPrice,
            paymentMethod,
            couponCode:couponCode,
            discount:discount,
            shiping:shiping
        };

        try {
        const response = await fetch('/checkout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        });

        const data = await response.json();

        if (response.ok) {
            if (paymentMethod === 'Cash On Delivery') {
                window.location.href = `/orderComform?id=${data.orderId}`;
            }if (paymentMethod === 'Wallet') {
                window.location.href = `/orderComform?id=${data.orderId}`;
            } else if (paymentMethod === 'Online') {
                if (data.razorpay) {
                    const options = {
                        key: data.razorpay.key,
                        amount: data.razorpay.amount,
                        currency: "INR",
                        name: "Bulk Nation",
                        description: "Product Purchase",
                        order_id: data.razorpay.order.id,
                        handler: async function (response) {
                            try {
                                const verifyResponse = await fetch('/verify-payment', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_signature: response.razorpay_signature
                                    })
                                });

                                const verifyData = await verifyResponse.json();

                                if (verifyData.success) {
                                    // Redirect to order confirmation
                                    window.location.href = `/orderComform?id=${verifyData.orderId}`;
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Verification Failed',
                                        text: verifyData.message,
                                    });
                                }
                            } catch (verifyError) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Payment Verification Error',
                                    text: 'An error occurred while verifying the payment.',
                                });
                                console.error('Verify Payment Error:', verifyError);
                            }
                        },
                        prefill: {
                            name: "<%= user.username %>", 
                            email: "<%= user.email %>",
                            contact: "<%= user.phone %>"
                        },
                        notes: {
                            address: "Razorpay Corporate Office"
                        },
                        theme: {
                            color: "#3399cc"
                        }
                    };

                    // Load Razorpay script dynamically
                    const script = document.createElement('script');
                    script.src = 'https://checkout.razorpay.com/v1/checkout.js';
                    script.onload = () => {
                        const razorpayInstance = new Razorpay(options);
                        razorpayInstance.open();
                    };
                    document.body.appendChild(script);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Error',
                        text: 'Unable to process online payment. Please try again.',
                    });
                }
            }
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Order Failed',
                text: data.message || 'An error occurred while placing the order.',
            });
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred. Please try again later.',
        });
        console.error('Error:', error);
    }
});

// ---------

// coupon management apply and remove 

const couponButton = document.getElementById("addCoupon");
const remove = document.getElementById("remove");

couponButton.addEventListener("click", (event) => {
    event.preventDefault();

    console.log("Coupon button clicked");


    const couponCodeElement= document.getElementById("couponValue");
    const couponCode=couponCodeElement.value.trim();
    const totalPriceElement = document.getElementById("totalPrice");
    const totalPrice = totalPriceElement.textContent.replace('₹', '').trim();
    // const remove = document.getElementById("remove");
    const discountElement = document.getElementById("discount");

    

   
    fetch("/apply-coupon", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ coupon: couponCode,totalPrice:totalPrice}) 
    })
    .then(response => response.json())
    .then(data => {
        if(data.success){
            totalPriceElement.textContent = `₹${data.totalPrice}`;
            couponCodeElement.value = data.code;
            discountElement.textContent=`₹${data.discountAmount}`;
            couponButton.style.display= "none";
            remove.style.display= "block";
            remove.style.backgroundColor="orange"
            remove.style.borderColor = "orange"
            Swal.fire({
                title:"Success!",
                text:data.message,
                icon:"success",
                confirmButtonText:"OK"
            }).then(()=>{
                updatePaymentOptions();
            })
        }else{
            Swal.fire({
                title:"Error!",
                text:data.message,
                icon:"error",
                confirmButtonText:"Try Again"
            })
        }
    })
    .catch(error => {
        console.error("Error",error);
        Swal.fire({
            title:"Oops!",
            title:"Something went wrong. Please try again late",
            icon:"error",
            confirmButtonText:"OK"
        });
    });
});


remove.addEventListener("click",(event)=>{
    event.preventDefault();

    const couponCodeElement= document.getElementById("couponValue");
    const couponCode=couponCodeElement.value.trim();
    const totalPriceElement = document.getElementById("totalPrice");
    const totalPrice = totalPriceElement.textContent.replace('₹', '').trim();
    const discountElement = document.getElementById("discount");
    const subtotal = document.getElementById("subtotal").textContent.replace('₹', '').trim();


    fetch("/remove-coupon", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ coupon: couponCode,totalPrice:subtotal}) // Pass the coupon code as JSON
    })
    .then(response => response.json())
    .then(data => {
        if(data.success){
            const sum = data.totalPrice+70;
            totalPriceElement.textContent = `₹${sum}`;
            couponCodeElement.value ="";
            discountElement.textContent="₹0"
            couponButton.style.display= "block";
            remove.style.display= "none";
            Swal.fire({
                title:"Success!",
                text:data.message,
                icon:"success",
                confirmButtonText:"OK"
            }).then(()=>{
                updatePaymentOptions();
            })
        }else{
            Swal.fire({
                title:"Error!",
                text:data.message,
                icon:"error",
                confirmButtonText:"Try Again"
            })
        }
    })
    .catch(error => {
        console.error("Error",error);
        Swal.fire({
            title:"Oops!",
            title:"Something went wrong. Please try again late",
            icon:"error",
            confirmButtonText:"OK"
        });
    });
});

// --------

// show the coupon code in modal

document.getElementById('showCouponsButton').addEventListener('click', function() {
        var modal = new bootstrap.Modal(document.getElementById('couponsModal'));
        modal.show();
    });


// manage shipping change function
function shippingCharge(){
    const totalPriceElement = document.getElementById("totalPrice");
    const totalPrice = totalPriceElement.textContent.replace('₹', '').trim();
    const shiping  = document.getElementById("shipping").textContent.replace("₹", "").trim() || 0;
    let sum = parseFloat(totalPrice)+parseFloat(shiping);
    totalPriceElement.textContent =`₹${sum}`;

};

document.addEventListener("DOMContentLoaded",shippingCharge);


// Update the existing code to show modal
document.querySelector('.btn-add-address').addEventListener('click', function(e) {
    e.preventDefault();
    const modal = new bootstrap.Modal(document.getElementById('addAddressModal'));
    modal.show();
});



document.getElementById('addressForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    // Reset error messages
    document.querySelectorAll('.error-message').forEach(error => {
        error.textContent = '';
        error.style.display = 'none';
    });

    // Get form data
    const formData = {
        name: document.getElementById('fullName').value.trim(),
        phone: document.getElementById('phone').value.trim(),
        addressType: document.getElementById('address').value.trim(),
        city: document.getElementById('city').value.trim(),
        state: document.getElementById('state').value.trim(),
        landMark: document.getElementById('landmark').value.trim(),
        pincode: document.getElementById('pincode').value.trim(),
        altPhone: document.getElementById('altPhone').value.trim()
    };

    // Validation rules
    const nameRegex = /^[A-Za-z\s]+$/; // Only letters and spaces
    const phoneRegex = /^[0-9]{10}$/; // Exactly 10 digits
    const addressRegex = /^.{1,100}$/; // Non-empty, up to 100 characters
    const cityStateRegex = /^[A-Za-z\s]+$/; // Only letters and spaces
    const landmarkRegex = /^[A-Za-z0-9\s]+$/; // Letters, numbers, and spaces
    const pincodeRegex = /^[0-9]{6}$/; // Exactly 6 digits

    let valid = true;

    // Name validation
    if (!nameRegex.test(formData.name)) {
        showError('name', 'Name must only contain letters and spaces.');
        valid = false;
    }

    // Phone validation
    if (!phoneRegex.test(formData.phone)) {
        showError('phone', 'Phone number must contain exactly 10 digits.');
        valid = false;
    }

    // Alternative Phone validation
    if (!phoneRegex.test(formData.altPhone)) {
        showError('altPhone', 'Alternative phone number must contain exactly 10 digits.');
        valid = false;
    } else if (formData.altPhone === formData.phone) {
        showError('altPhone', 'Alternative phone number must not be the same as the primary phone number.');
        valid = false;
    }

    // Address validation
    if (!addressRegex.test(formData.addressType)) {
        showError('address', 'Address cannot be empty and must be under 100 characters.');
        valid = false;
    }

    // City validation
    if (!cityStateRegex.test(formData.city)) {
        showError('city', 'City must only contain letters and spaces.');
        valid = false;
    }

    // State validation
    if (!cityStateRegex.test(formData.state)) {
        showError('state', 'State must only contain letters and spaces.');
        valid = false;
    }

    // Landmark validation
    if (!landmarkRegex.test(formData.landMark)) {
        showError('landmark', 'Landmark must only contain letters, numbers, and spaces.');
        valid = false;
    }

    // Pincode validation
    if (!pincodeRegex.test(formData.pincode)) {
        showError('pincode', 'Pincode must contain exactly 6 digits.');
        valid = false;
    }

    // If the form is invalid, stop submission
    if (!valid) return;

    try {
        const response = await fetch('/check-out-addaddress', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Address added successfully',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                const modal = bootstrap.Modal.getInstance(document.getElementById('addAddressModal'));
                modal.hide();
                window.location.reload();
            });
        } else {
            if (data.errors) {
                Object.keys(data.errors).forEach(key => {
                    showError(key, data.errors[key]);
                });
            }
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Something went wrong! Please try again.',
        });
    }
});

// Helper function to show error messages
function showError(field, message) {
    const errorElement = document.getElementById(`${field}Error`);
    if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.display = 'block';
    }
}

// Phone number validation
document.getElementById('phone').addEventListener('input', function () {
    if (!/^[0-9]{10}$/.test(this.value)) {
        showError('phone', 'Please enter a valid 10-digit phone number.');
    } else {
        hideError('phone');
    }
});

document.getElementById('altPhone').addEventListener('input', function () {
    if (!/^[0-9]{10}$/.test(this.value)) {
        showError('altPhone', 'Please enter a valid 10-digit phone number.');
    } else if (this.value === document.getElementById('phone').value) {
        showError('altPhone', 'Alternative phone number must not match the primary phone number.');
    } else {
        hideError('altPhone');
    }
});

// Pincode validation
document.getElementById('pincode').addEventListener('input', function () {
    if (!/^[0-9]{6}$/.test(this.value)) {
        showError('pincode', 'Please enter a valid 6-digit pincode.');
    } else {
        hideError('pincode');
    }
});

// Helper function to hide error messages
function hideError(field) {
    const errorElement = document.getElementById(`${field}Error`);
    if (errorElement) {
        errorElement.textContent = '';
        errorElement.style.display = 'none';
    }
};


</script>

<%- include("../partials/userr/footer.ejs") %>