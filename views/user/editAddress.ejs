<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Address</title>
    <!-- New CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }
        .navbar {
            background-color: #ff8c00;
        }
        .navbar-brand, .nav-link {
            color: white !important;
        }
        .nav-link:hover, .nav-link.active {
            color: #ffd700 !important;
        }
        .card {
            border: none;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
        .btn-primary {
            background-color: #ff8c00;
            border-color: #ff8c00;
        }
        .btn-primary:hover {
            background-color: #e67e00;
            border-color: #e67e00;
        }
        .table th {
            background-color: #ff8c00;
            color: white;
        }
        .badge {
            font-size: 0.8em;
            padding: 0.5em 0.7em;
        }
        #specific-container {
            background-color: white;
            border-radius: 15px;
            padding: 30px;
            text-align: center;
            max-width: 500px;
            margin: 50px auto;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        #specific-container img {
            max-width: 200px;
            margin-bottom: 20px;
        }
        #specific-container .cta-button {
            background-color: #ff8c00;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }
        #specific-container .cta-button:hover {
            background-color: #e67e00;
        }
    </style>
    <!-- Old CSS -->
    <style>
        .btn-save {
            background-color: #ffc107;
            color: black;
            border: none;
        }
        .btn-save:hover {
            background-color: #e0ac07;
        }
        .nav-tabs .nav-link.active {
            border-bottom: 3px solid #ffc107;
        }
        .address-card {
            background: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
        }
        .nav-link:hover {
            color: orange;
        }
        .nav-link.active {
            color: orange;
            font-weight: bold;
        }
        hr {
            border-top: 1px solid #e6e6e6;
        }
        .error-message {
            color: red;
            font-size: 0.875rem;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand fw-bold" href="/">Bulk Nation</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/userProfile"><i class="fas fa-user"></i> My Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/orderDetails"><i class="fas fa-box"></i> My Orders</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/userAdresses"><i class="fas fa-map-marker-alt"></i> My Addresses</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/wallet"><i class="fas fa-wallet"></i> BN Cash</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="fas fa-credit-card"></i> Saved Cards</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Address Form -->
    <div class="container">
        <div class="address-card mx-auto">
            <h2 class="fw-bold mb-4">Edit My Address</h2>
            <form id="addressForm">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="fullName" class="form-label">Full Name</label>
                            <input type="text" class="form-control" id="fullName" name="name" value="<%=address.name%>" placeholder="Enter your full name" required>
                            <small class="error-message" id="nameError"></small>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" id="phone" name="phone" value="<%=address.phone%>" placeholder="Enter your phone number" required>
                            <small class="error-message" id="phoneError"></small>
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="address" class="form-label">Address</label>
                    <input class="form-control" id="address" name="addressType" value="<%=address.addressType%>" placeholder="Enter your address" rows="3" required></input>
                    <small class="error-message" id="addressError"></small>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control" id="city" name="city" value="<%=address.city%>" placeholder="Enter your city" required>
                            <small class="error-message" id="cityError"></small>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="state" class="form-label">State</label>
                            <input type="text" class="form-control" id="state" name="state" value="<%=address.state%>" placeholder="Enter your state" required>
                            <small class="error-message" id="stateError"></small>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="landmark" class="form-label">Landmark</label>
                            <input type="text" class="form-control" id="landmark" name="landmark" value="<%=address.landMark%>" placeholder="Enter a nearby landmark" required>
                            <small class="error-message" id="landmarkError"></small>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="pincode" class="form-label">Pincode</label>
                            <input type="text" class="form-control" id="pincode" name="pincode" value="<%=address.pincode%>" placeholder="Enter your pincode" required>
                            <small class="error-message" id="pincodeError"></small>
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="altPhone" class="form-label">Alternative Phone Number</label>
                    <input type="tel" class="form-control" id="altPhone" name="altPhone" value="<%=address.altPhone%>" placeholder="Enter your alternative phone number" required>
                    <small class="error-message" id="altPhoneError"></small>
                </div>
                <p id="id" style="display: none;"><%=id%></p>
                <button type="submit" class="btn btn-save">Save Address</button>
            </form>
        </div>
    </div>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.getElementById('addressForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        // Get input values
        const fullName = document.getElementById('fullName').value;
        const phone = document.getElementById('phone').value;
        const address = document.getElementById('address').value;
        const city = document.getElementById('city').value;
        const state = document.getElementById('state').value;
        const landmark = document.getElementById('landmark').value;
        const pincode = document.getElementById('pincode').value;
        const altPhone = document.getElementById('altPhone').value;
        const id = document.getElementById("id").textContent;

        let valid = true;

        // Regular Expressions for validation
        const nameRegex = /^[A-Za-z\s]+$/;
        const phoneRegex = /^\+?[0-9]{10}$/;
        const cityStateRegex = /^[A-Za-z\s]+$/;
        const landmarkRegex = /^[A-Za-z0-9\s]+$/;
        const pincodeRegex = /^[0-9]{6}$/;

        // Name validation
        if (!nameRegex.test(fullName)) {
            valid = false;
            document.getElementById('nameError').textContent = "Name can only contain letters and spaces.";
        } else {
            document.getElementById('nameError').textContent = "";
        }

        // Phone validation
        if (!phoneRegex.test(phone)) {
            valid = false;
            document.getElementById('phoneError').textContent = "Phone number must be a valid 10-digit number.";
        } else {
            document.getElementById('phoneError').textContent = "";
        }

        // Address validation
        if (address.trim() === "") {
            valid = false;
            document.getElementById('addressError').textContent = "Address cannot be empty.";
        } else {
            document.getElementById('addressError').textContent = "";
        }

        // City validation
        if (!cityStateRegex.test(city)) {
            valid = false;
            document.getElementById('cityError').textContent = "City must contain only letters.";
        } else {
            document.getElementById('cityError').textContent = "";
        }

        // State validation
        if (!cityStateRegex.test(state)) {
            valid = false;
            document.getElementById('stateError').textContent = "State must contain only letters.";
        } else {
            document.getElementById('stateError').textContent = "";
        }

        // Landmark validation
        if (!landmarkRegex.test(landmark)) {
            valid = false;
            document.getElementById('landmarkError').textContent = "Landmark must contain only letters, numbers, and spaces.";
        } else {
            document.getElementById('landmarkError').textContent = "";
        }

        // Pincode validation
        if (!pincodeRegex.test(pincode)) {
            valid = false;
            document.getElementById('pincodeError').textContent = "Pincode must be a valid 6-digit number.";
        } else {
            document.getElementById('pincodeError').textContent = "";
        }

        // Alternative phone validation
        if (!phoneRegex.test(altPhone)) {
            valid = false;
            document.getElementById('altPhoneError').textContent = "Alternative phone number must be a valid 10-digit number.";
        } else if (altPhone === phone) {
            valid = false;
            document.getElementById('altPhoneError').textContent = "Alternative phone number must not match the phone number.";
        } else {
            document.getElementById('altPhoneError').textContent = "";
        }

        // If the form is invalid, exit
        if (!valid) return;

        // Submit the form data using fetch
        try {
            console.log("address",id)
            const response = await fetch(`/postEditAddress/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    name: fullName,
                    phone: phone,
                    addressType: address,
                    city: city,
                    state: state,
                    landMark: landmark,
                    pincode: pincode,
                    altPhone: altPhone,
                }),
            });

            const result = await response.json();

            if (response.ok) {
                // Display success message
                Swal.fire({
                    icon: 'success',
                    title: 'Address Saved',
                    text: 'Your address has been successfully Edited!',
                }).then(() => {
        // Redirect to the address page after the user clicks "OK"
        window.location.href = '/userAdresses'; // Replace '/address' with your actual address page URL
    });
                // Clear the form
                document.getElementById('addressForm').reset();
            } else {
                // Display error message from server
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'Something went wrong!',
                });
            }
        } catch (error) {
            // Handle fetch error
            Swal.fire({
                icon: 'error',
                title: 'Network Error',
                text: 'Failed to submit the address. Please try again later.',
            });
        }
    });
</script>


</body>
</html>
